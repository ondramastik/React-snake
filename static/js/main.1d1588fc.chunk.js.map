{"version":3,"sources":["domain/TileType.ts","domain/Direction.ts","service/SnakeService.ts","service/mock/MockedSnakeService.ts","context/SnakeServiceContext.tsx","components/game/game-field/GameFieldPresenter.tsx","components/game/Game.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["TileType","Direction","SnakeService","map","lastDirection","foodLocation","snakeTiles","this","generateFoodLocation","tiles","startLocation","direction","Promise","resolve","reject","undefined","handleTick","getGameView","e","currentHeadPos","length","newPos","Top","X","Down","Left","Y","Right","validate","push","shift","Error","Floor","Food","includes","filter","snakeLoc","x","tmp","randomIndex","console","log","y","max","Math","floor","random","MockedSnakeService","SnakeServiceContext","React","createContext","resolveTile","gameField","pos","location","Snake","GameFieldPresenter","id","row","Fragment","tile","className","Game","gameSpeed","useState","gameView","setGameView","running","setRunning","error","setError","errorCause","setErrorCause","tick","setTick","currentDirection","setCurrentDirection","nextDirection","setNextDirection","snakeService","useContext","isValidDirection","useCallback","prevDirection","newDirection","useEffect","document","addEventListener","code","setTimeout","then","catch","reason","message","onClick","reset","disabled","App","TT","Wall","Empty","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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E,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACjO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGE,MAAOF,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACvO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACjO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGlE,MAAOkE,EAAGC,MACzO,CAACD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,KAAMD,EAAGC,OAErNzF,cAAe,CACba,EAAG,EACHG,EAAG,IAEJzB,EAAUuB,OAvCNuD,EADM,oBA0Cb,OACE,qBAAKlB,UAAU,MAAf,SACE,cAACb,EAAoBqD,SAArB,CAA8BC,MAAOvB,EAArC,SACE,cAAC,EAAD,CAAMhB,UAAW,UCtCVwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BX,M","file":"static/js/main.1d1588fc.chunk.js","sourcesContent":["export enum TileType {\n  Empty,\n  Floor,\n  Wall,\n  Snake,\n  Food,\n}","export enum Direction {\n  Top,\n  Down,\n  Left,\n  Right\n}","import ISnakeService from \"../domain/service/SnakeService\";\nimport GameView from \"../domain/GameView\";\nimport {Direction} from \"../domain/Direction\";\nimport {TileType} from \"../domain/TileType\";\nimport Coordinates from \"../domain/Coordinates\";\nimport GameMap from \"../domain/GameMap\";\n\nexport default class SnakeService implements ISnakeService {\n\n  private map: GameMap\n\n  private foodLocation: Coordinates\n\n  private snakeTiles: Coordinates[]\n\n  private lastDirection: Direction\n\n  constructor(map: GameMap, lastDirection: Direction) {\n    this.map = map\n    this.foodLocation = SnakeService.generateFoodLocation(map.tiles)\n    this.snakeTiles = [{...map.startLocation}]\n    this.lastDirection = lastDirection\n  }\n\n  tick(direction?: Direction): Promise<GameView> {\n    return new Promise<GameView>((resolve, reject) => {\n      try {\n        if(direction !== undefined) {\n          resolve(this.handleTick(direction))\n        } else {\n          resolve(this.getGameView())\n        }\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  reset(): Promise<GameView> {\n    this.snakeTiles = [{...this.map.startLocation}]\n    this.foodLocation = SnakeService.generateFoodLocation(this.map.tiles)\n\n    return Promise.resolve(this.getGameView())\n  }\n\n  private handleTick(direction: Direction): GameView {\n    const currentHeadPos = this.snakeTiles[this.snakeTiles.length - 1]\n    const newPos = {...currentHeadPos}\n\n    switch (direction) {\n      case Direction.Top:\n        newPos.X -= 1\n        break;\n      case Direction.Down:\n        newPos.X += 1\n        break;\n      case Direction.Left:\n        newPos.Y -= 1\n        break;\n      case Direction.Right:\n        newPos.Y += 1\n        break;\n    }\n\n    this.validate(newPos)\n\n    this.snakeTiles.push(newPos)\n\n    if (this.foodLocation.X === newPos.X && this.foodLocation.Y === newPos.Y) {\n      this.foodLocation = SnakeService.generateFoodLocation(this.map.tiles)\n    } else this.snakeTiles.shift()\n\n\n    return this.getGameView()\n  }\n\n  private getGameView(): GameView {\n    return {\n      tiles: this.map.tiles,\n      snakeTiles: this.snakeTiles,\n      foodLocation: this.foodLocation\n    }\n  }\n\n  private validate(newPos: Coordinates): void {\n    if (!this.map.tiles[newPos.X][newPos.Y]) {\n      throw Error(\"Player out of field\")\n    }\n    if (![TileType.Floor, TileType.Food].includes(this.map.tiles[newPos.X][newPos.Y])) {\n      throw Error(\"Player crashed\")\n    }\n    if (this.snakeTiles.filter(snakeLoc => snakeLoc.X === newPos.X && snakeLoc.Y === newPos.Y).length > 0) {\n      throw Error(\"The player ate himself\")\n    }\n  }\n\n  private static generateFoodLocation(tiles: TileType[][]): Coordinates {\n    let x: number = -1\n\n    while (true) {\n      let tmp = SnakeService.randomIndex(tiles.length)\n      console.log(tiles[tmp])\n      if (tiles[tmp] !== undefined && tiles[tmp].includes(TileType.Floor)) {\n        x = tmp\n        break;\n      }\n    }\n\n    let y: number = -1\n\n    while (true) {\n      let tmp = SnakeService.randomIndex(tiles[x].length)\n      console.log(tiles[x][tmp])\n      if (tiles[x][tmp] !== undefined && tiles[x][tmp] === TileType.Floor) {\n        y = tmp\n        break;\n      }\n    }\n\n    return {\n      X: x,\n      Y: y\n    }\n  }\n\n  private static randomIndex(max: number): number {\n    return Math.floor((Math.random() * max))\n  }\n\n\n}","import ISnakeService from \"../../domain/service/SnakeService\";\nimport GameView from \"../../domain/GameView\";\nimport {Direction} from \"../../domain/Direction\";\n\n\nexport default class MockedSnakeService implements ISnakeService {\n\n  tick(direction?: Direction): Promise<GameView> {\n    return Promise.resolve({tiles: [], snakeTiles: [], foodLocation: {X: 1, Y: 1}},)\n  }\n\n  reset(): Promise<GameView> {\n    return Promise.resolve({tiles: [], snakeTiles: [], foodLocation: {X: 1, Y: 1}},)\n  }\n\n}","import React from \"react\"\nimport ISnakeService from \"../domain/service/SnakeService\";\nimport MockedSnakeService from \"../service/mock/MockedSnakeService\";\n\nexport const SnakeServiceContext = React.createContext<ISnakeService>(new MockedSnakeService())","import React, {FC} from 'react';\nimport './GameFieldPresenter.css';\nimport GameView from \"../../../domain/GameView\";\nimport Coordinates from \"../../../domain/Coordinates\";\nimport {TileType} from \"../../../domain/TileType\";\n\ninterface Props {\n  gameField: GameView\n}\n\nconst resolveTile = (gameField: GameView, pos: Coordinates) => {\n  if(gameField.snakeTiles.filter(location => location.X === pos.X && location.Y === pos.Y).length > 0) {\n    return TileType.Snake\n  } else if(gameField.foodLocation.X === pos.X && gameField.foodLocation.Y === pos.Y) {\n    return TileType.Food\n  }\n\n  return gameField.tiles[pos.X][pos.Y]\n}\n\nconst GameFieldPresenter: FC<Props> = ({gameField}) => {\n  return <div id=\"game-field-presenter\">\n    {gameField.tiles.map(\n      (row, x) => <React.Fragment>\n        {row.map((tile, y) => <div\n          className={`tile tile-${resolveTile(gameField, {X: x, Y: y})}`} key={`${x}-${y}`}/>)}\n        <div/>\n      </React.Fragment>)}\n  </div>\n}\n\nexport default GameFieldPresenter\n","import React, {FC, useCallback, useContext, useEffect, useState} from 'react';\nimport GameView from \"../../domain/GameView\";\nimport ISnakeService from \"../../domain/service/SnakeService\";\nimport {SnakeServiceContext} from \"../../context/SnakeServiceContext\";\nimport GameFieldPresenter from \"./game-field/GameFieldPresenter\";\nimport {Direction} from \"../../domain/Direction\";\n\ninterface Props {\n  gameSpeed: number\n}\n\nconst Game: FC<Props> = ({gameSpeed}) => {\n  const [gameView, setGameView] = useState<GameView | undefined>()\n\n  const [running, setRunning] = useState(false)\n\n  const [error, setError] = useState(false)\n  const [errorCause, setErrorCause] = useState()\n\n  const [tick, setTick] = useState(0)\n  const [currentDirection, setCurrentDirection] = useState<Direction>()\n  const [nextDirection, setNextDirection] = useState<Direction>()\n\n  const snakeService: ISnakeService = useContext(SnakeServiceContext)\n\n  const restart = () => {\n    snakeService.reset()\n      .then(gameView => setGameView(gameView))\n\n    setTick(0)\n    setError(false)\n    setErrorCause(undefined)\n    setRunning(true)\n    setNextDirection(undefined)\n    setCurrentDirection(undefined)\n  }\n\n  const isValidDirection = useCallback((prevDirection?: Direction, newDirection?: Direction) => {\n    switch (newDirection) {\n      case Direction.Left:\n        if(prevDirection === Direction.Right)\n          return false\n        break\n      case Direction.Top:\n        if(prevDirection === Direction.Down)\n          return false\n        break\n      case Direction.Right:\n        if(prevDirection === Direction.Left)\n          return false\n        break\n      case Direction.Down:\n        if(prevDirection === Direction.Top)\n          return false\n        break\n    }\n    return true\n  }, [])\n\n  useEffect(() => {\n    if (!error && !running) {\n      document.addEventListener('keydown', function (e) {\n        let newDirection: Direction | undefined = undefined\n        switch (e.code) {\n          case \"ArrowLeft\":\n            newDirection = Direction.Left\n            break;\n          case \"ArrowUp\":\n            newDirection = Direction.Top\n            break;\n          case \"ArrowRight\":\n            newDirection = Direction.Right\n            break;\n          case \"ArrowDown\":\n            newDirection = Direction.Down\n            break;\n        }\n\n        if(newDirection !== undefined) {\n          setNextDirection(newDirection)\n        }\n      })\n\n      setRunning(true)\n    }\n  }, [currentDirection, error, isValidDirection, running])\n\n  useEffect(() => {\n    if (running) {\n      setTimeout(() => setTick(tick + 1), gameSpeed)\n\n      snakeService\n        .tick(nextDirection)\n        .then(gameView => setGameView(gameView))\n        .catch(reason => {\n          setErrorCause(reason.message)\n          setRunning(false)\n          setError(true)\n        })\n\n      setCurrentDirection(nextDirection)\n    }\n  }, [gameSpeed, running, snakeService, tick])\n\n  useEffect(() => {\n    if(!isValidDirection(currentDirection, nextDirection)) {\n      setNextDirection(currentDirection)\n    }\n  }, [currentDirection, isValidDirection, nextDirection])\n\n\n  return <div id=\"game\">\n    <h1>Směr: {currentDirection}</h1>\n    <h1>Tick: {tick}</h1>\n    {errorCause && <h1>Error: {errorCause}</h1>}\n    {gameView && <GameFieldPresenter gameField={gameView}/>}\n    <button onClick={() => restart()} disabled={running}>Restart</button>\n  </div>\n}\n\nexport default Game\n","import React, {useState} from 'react';\nimport {TileType as TT} from \"../domain/TileType\";\nimport SnakeService from \"../service/SnakeService\";\nimport {Direction} from \"../domain/Direction\";\nimport Game from \"./game/Game\";\nimport {SnakeServiceContext} from \"../context/SnakeServiceContext\";\n\nfunction App() {\n  const [snakeService] = useState(new SnakeService({\n    tiles: [\n      [TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Empty, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Floor, TT.Wall,],\n      [TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall, TT.Wall,],\n    ],\n    startLocation: {\n      X: 1,\n      Y: 1\n    }\n  }, Direction.Down))\n\n  return (\n    <div className=\"App\">\n      <SnakeServiceContext.Provider value={snakeService}>\n        <Game gameSpeed={75}/>\n      </SnakeServiceContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}